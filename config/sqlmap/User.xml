<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"  
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd"> 
 <mapper namespace="user">
 	<!-- #{ } 表示一个占位符 -->
 	<!-- parameterType 查询的输入参数类型 ，若传入类型为简单类型（8大基本类型），占位符中的参数名可任意 -->
 	<!-- resultType 指定将返回的结果集中的每条记录映射成的Java类型 -->
 	<select id="queryUserById" parameterType="int" resultType="mybatis.po.User">
 		SELECT * FROM USER WHERE id=#{id}
 	</select>
 	
 	<!-- ${value} 若传入类型是简单类型，则只能使用value-->
 	<!-- 拼接可能引起sql注入  sql注入 -->
 	<select id="queryUserByName" parameterType="String" resultType="mybatis.po.User">
 		SELECT * FROM USER WHERE username LIKE '%${value}%'
 	</select>
 	
 	<insert id="insertUser" parameterType="mybatis.po.User">
 		INSERT INTO USER(id,username,birthday,sex,address)values(#{id},#{username},#{birthday},#{sex},#{address})
 	</insert>
 	
 	<select id="selectUserAndOrders" parameterType="String" resultMap="user">
 		SELECT user.id as userId , username,birthday,sex,address,orders.id as orderId,number,createtime,note 
		from user,orders 
		where user.id='1' and user.id=orders.user_id
 	</select>
 	<!-- 一对多级联查询 -->
 	<resultMap type="mybatis.po.User" id="user">
 		<id property="id" column="userId"/>
 		<result property="username" column="username"/>
 		<result property="sex" column="sex"/>
 		<result property="birthday" column="birthday"/>
 		<result property="address" column="address"/>
 		
 		<collection property="orders" javaType="java.util.LinkedList" ofType="mybatis.po.Order">
	 		<id property="id" column="orderId"/>
	 		<result property="userId" column="userId"/>
	 		<result property="number" column="number"/>
	 		<result property="createTime" column="createTime"/>
	 		<result property="note" column="note"/>
 		</collection>
 	</resultMap>
 	
 </mapper>